---
title: "Income Census Dataset"
author: "Lidia Montero"
date: \today
output:
  html_document:
    toc: no
    toc_depth: '4'
  pdf_document:
    latex_engine: pdflatex
    number_sections: yes
    toc_depth: 4
    toc: yes
  word_document:
    toc: yes
    toc_depth: '4'
geometry: left=1.9cm,right=1.9cm,top=1.25cm,bottom=1.52cm
fontsize: 12pt
subtitle: 'Loading data and Sample selection'
editor_options: 
  chunk_output_type: console
---

This is an R Markdown document. 
We are showing some examples of EDA. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>. Use * to provide emphasis such as *italics* and **bold**.

Create lists: Unordered * and +     or   ordered   1. 2.  

  *klll

  1. Item 1
  2. Item 2
    + Item 2a
    + Item 2b

# Income Census Dataset

## Description 

*Input variables:* 

  1.  age: continuous.
  2.  workclass: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked.
  3.  fnlwgt: continuous.
  4.  education: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc, 9th, 7th-8th, 12th, Masters, 1st-4th, 10th, Doctorate, 5th-6th, Preschool.
  5.  education-num: continuous.
  6.  marital.status: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent, Married-AF-spouse.
  7.  occupation: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners, Machine-op-inspct, Adm-clerical, Farming-fishing, Transport-moving, Priv-house-serv, Protective-serv, Armed-Forces.
  7.  relationship: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried.
  8.  race: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black.
  9.  sex: Female, Male.
  10.  capital.gain: continuous.
  11.  capital.loss: continuous.
  12.  hours.per.week: continuous. Numeric target.
  13.  native.country: United-States, Cambodia, England, Puerto-Rico, Canada, Germany, Outlying-US(Guam-USVI-etc), India, Japan, Greece, South, China, Cuba, Iran, Honduras, Philippines, Italy, Poland, Jamaica, Vietnam, Mexico, Portugal, Ireland, France, Dominican-Republic, Laos, Ecuador, Taiwan, Haiti, Columbia, Hungary, Guatemala, Nicaragua, Scotland, Thailand, Yugoslavia, El-Salvador, Trinadad&Tobago, Peru, Hong, Holand-Netherlands.
  15.  y.bin: Making more than $50K per year. Binary target.


## Load Packages

```{r}
# Load Required Packages: to be increased over the course

options(contrasts=c("contr.treatment","contr.treatment"))

requiredPackages <- c("effects","FactoMineR","car", "factoextra","ggplot2","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]

if(length(missingPackages)) install.packages(missingPackages)

lapply(requiredPackages, require, character.only = TRUE)

# Manual installation and loading of package
install.packages("mlogit")
library(mlogit)

```

## Load Sample

```{r}
# Clear objects
rm(list=ls())
# Clear plots
if(!is.null(dev.list())) dev.off()

# Command or Windows-like method
load("sample.RData")
summary(df)
```

# Data Preparation

```{r}
names(df)

#lista de variables continuas y variables discretas
vars_con<-names(df)[c(1,3,5,11:13)];vars_con
vars_dis<-names(df)[c(2,4,6:10,14,15)];vars_dis

# summary de ciertas columnas [,]si se deja en blanco -> toda la dimenasión
summary(df[,vars_con])


summary(df[,vars_dis])


```

# Factor preparation

## type.employer = workclass

```{r}

# No utilizar attach()
# Máximo 8 Categorías ?

levels(df$workclass)

# Graphic tool for univ EDA and facators
# Table() cuenta cuantas observaciones hay
# No queremos que queden grupos muy vacios
barplot((table(df$workclass)))
table(df$workclass)

# Meter never-worked y without-pay en self-empc-not-inc
# Private, Self-emp

# User target mean (mirar si tiene sentido agrupación)
tapply(df$`hours-per-week`,df$workclass,mean)


# Crear factores agrupando para workclass

df$f.type<-1
ll<-which(df$workclass == "Private");length(ll)

# 2 opciones
df$f.type[ll]<-2
# Otra opción 
df(ll,"f.type")<-2 # f.type already avaliable

ll<-which(df$workclass == "Self-emp-inc");length(ll)
df$f.type[ll]<-3

ll<-which(df$workclass %in% c("Self-emp-not-inc","Never-worked","Without-pay"));length(ll)
df$f.type[ll]<-4

# Check
paste0("f.typ-",c("Civil","Private","SelfEm","Other"))

# Define f.type as a factor and use 'nice' level names
df$f.type<-factor(df$f.type,levels = 1:4, labels = paste0("f.typ-",c("Civil","Private","SelfEm","Other")))

# Comprobar nueva variable
summary(df$f.type)
barplot((table(df$f.type)))


```

## Sex - Change label names

```{r}
#paste0() concatenar
levels(df$sex)<-paste0("Sex-",levels(df$sex))
summary(df$sex)

# Univariant EDA
# Porcentajes
100*table(df$sex)/nrow(df)
prop.table(table(df$sex))

# Graphic tools
barplot(table(df$sex),main = "Gender observations",col = rainbow(2))


```

## Numeric Variables - Discretization
### Age

```{r}
# Factores númericos

summary(df$age)

# Try 4 categoreis first (5-6 max)
quantile(df$age)

#f.age -> factor age
cut(df$age,quantile(df$age))
df$f.age<-factor(cut(df$age,quantile(df$age),include.lowest = T))
summary(df$f.age)

# Reasonable according to target?
tapply(df$`age`,df$f.age,median) # OK

# Alternativa para otra situación
# Alternative breaks defined at 30,40,50
df$f.age<-factor(cut(df$age,c(17,29,39,49,90),include.lowest = T))
summary(df$f.age)

levels(df$f.age)<-paste0("f.age-",levels(df$f.age))
summary(df$f.age)

# Intento
df$f.age<-factor(df$f.age,levels = paste0("f.age-",labels))

#Descriptiva univariante de factors hecha(barplot,..)

```



## Univariant EDA - Numeric variables

### age
```{r}

# Numeric indicators - statistics
summary(df$age)
quantile(df$age)

# Lista de 0 a 1, incremento de 0.1
seq(0,1,by=0.1)
quantile(df$age, seq(0,1,by=0.1)) # Decils of df$age

# Desviación tipus
sd(df$age)
# Varianza
var(df$age)


# Coeficient of variation
# Dividir sd/mediana de la escala
# Coeficiente más grande de 1 -> liada
sd(df$age)/mean(df$age)


# Diagramas de barras solo para facores o numericas discretas

# Graphical tools
hist(df$age)
hist(df$age, main = "Age Histogram", col = "orange")
hist(df$age, main = "Age Histogram", col = rainbow(12))

## Frecuencia relativa y no la división que hace R
mm<-mean(df$age);dd<-sd(df$age);mm;dd
hist(df$age, freq = F, main = "Age Histogram", col = rainbow(12))
# hist(df$age, freq = F, 30, main = "Age Histogram", col = rainbow(12)) numero de barras

# curve() relacionado con el gráfico anterior
curve(dnorm(x,mean = mm, sd = dd),col = "cyan",add=T)
# se le puede pasar una lista con breaks

# Outlier detection
boxplot(df$age, main = "Boxplot age")

## Calcular limites outliers
summary(df$age)
outsev<-48+3*(8-27) 

# Dibujar linea boxplot
abline(h=outsev, col= "red",lwd=1, lty= 2)


```













